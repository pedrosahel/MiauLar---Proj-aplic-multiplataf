# üêæ Arquitetura do Sistema

## üèóÔ∏è Escopo do Projeto
  O escopo deste projeto contempla o desenvolvimento de um sistema voltado para facilitar a ado√ß√£o respons√°vel de gatos e reduzir o abandono desses animais em √°reas urbanas. O sistema permitir√° o cadastro de usu√°rios, diferenciando tutores e organiza√ß√µes de prote√ß√£o animal.
  
  A plataforma oferecer√° recursos de busca para facilitar a localiza√ß√£o de animais, al√©m de possibilitar a solicita√ß√£o de ado√ß√£o por parte dos interessados. As solicita√ß√µes ser√£o gerenciadas pelas organiza√ß√µes, que poder√£o aprov√°-las ou rejeit√°-las, com atualiza√ß√£o autom√°tica do status de cada animal.
    
  Est√£o fora do escopo desta primeira vers√£o funcionalidades avan√ßadas, como integra√ß√£o com sistemas de pagamento, acompanhamento p√≥s-ado√ß√£o e recursos de busca e filtragem.
 

### Funcionalidades contempladas
- Cadastro de usu√°rios, com diferencia√ß√£o entre **tutores**, **organiza√ß√µes de prote√ß√£o animal** e **protetores independentes**.  
- Cadastro de gatos dispon√≠veis para ado√ß√£o.  
- Possibilidade de **solicita√ß√£o de ado√ß√£o** por parte dos tutores interessados.  
- **Gest√£o de solicita√ß√µes** pelas organiza√ß√µes (aprova√ß√£o ou rejei√ß√£o).  

### Fora do escopo (vers√£o inicial)
- Integra√ß√£o com sistemas de pagamento.  
- Recursos de **busca e filtragem** de animais.  
- Acompanhamento p√≥s-ado√ß√£o.  
- Design gr√°fico avan√ßado.  

---

## üñ•Ô∏è Arquitetura do Sistema
A arquitetura proposta segue o padr√£o **Cliente-Servidor** dividido em tr√™s camadas principais:

### 1. **Frontend**
- **Web:** Desenvolvida com **HTML, CSS, JavaScript e Bootstrap**, garantindo leveza, responsividade e baixo n√≠vel de complexidade.  
- **Mobile:** Implementada como **PWA**, possibilitando que o site responsivo seja utilizado tamb√©m em dispositivos m√≥veis, sem necessidade de app nativo.  

### 2. **Backend**
- Constru√≠da em **PHP** com o framework **CodeIgniter 4**, respons√°vel por:  
  - Gerenciar autentica√ß√£o e perfis de usu√°rio (ONGs, tutores).  
  - Processar solicita√ß√µes de ado√ß√£o.  
  - Controlar o fluxo de aprova√ß√£o/rejei√ß√£o.  
  - Atualizar o status dos animais no banco de dados.  
- Implementa√ß√£o de **APIs REST**, que conectam o frontend ao backend.  

### 3. **Camada de Dados**
- Banco de dados relacional **MySQL**, respons√°vel por armazenar:  
  - Informa√ß√µes de usu√°rios.  
  - Perfis de ONGs e tutores.  
  - Cadastro de gatos dispon√≠veis.  
  - Solicita√ß√µes de ado√ß√£o e seus status.  

---

## üîÑ Fluxo Simplificado
1. Usu√°rio acessa a plataforma.  
2. Faz login ou cria cadastro.  
3. ONG cadastra gatos dispon√≠veis.  
4. Tutor busca animais e envia uma solicita√ß√£o de ado√ß√£o.  
5. ONG recebe e analisa a solicita√ß√£o.  
6. Sistema atualiza automaticamente o status do animal (dispon√≠vel, em an√°lise, adotado).  

---

## üõ†Ô∏è Tecnologias Propostas
- **Frontend Web:** HTML, CSS, JavaScript, Bootstrap  
- **Frontend Mobile:** PWA 
- **Backend:** PHP (CodeIgniter 4)  
- **Banco de Dados:** MySQL  
- **APIs:** REST  
- **Controle de Vers√£o:** Git/GitHub  

---
